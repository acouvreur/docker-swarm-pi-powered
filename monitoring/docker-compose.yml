
version: "3.7"

services:

  #----------------------------------------------#
  # Telegraf : data collector
  #----------------------------------------------#
  telegraf:
    image: telegraf:latest
    hostname: "{{.Node.Hostname}}"
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostfs:ro
      - /sys:/hostfs/sys:ro
      - /proc:/hostfs/proc:ro
      - /etc:/hostfs/etc:ro
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_MOUNT_PREFIX=/hostfs
    configs:
      - source: telegraf.conf
        target: /etc/telegraf/telegraf.conf
    deploy:
      mode: global

  #----------------------------------------------#
  # InfluxDB : time series database
  #----------------------------------------------#
  influxdb:
    image: influxdb:latest
    networks:
      - traefik
    configs:
      - source: influxdb.conf
        target: /etc/influxdb/influxdb.conf
    healthcheck:
      test: "wget -q -Y off http://localhost:8086/metrics -O /dev/null > /dev/null 2>&1"
      interval: 25s
      timeout: 3s
      start_period: 30s
    volumes:
      - influxdb_data:/var/lib/influxdb

  #----------------------------------------------#
  # Grafana : analytics and monitoring
  #----------------------------------------------#
  grafana:
    image: "grafana/grafana:7.0.0"
    user: ${PUID}
    volumes:
      - grafana_data:/var/lib/grafana
    configs:
      - source: grafana.ini
        target: /etc/grafana/grafana.ini
    environment:
      - TZ=${TZ}
      - GF_SERVER_ROOT_URL=https://grafana.${DOMAINNAME}/
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - SMTP_EMAIL
      - SMTP_PASSWORD
    networks:
      - traefik
    healthcheck:
      test: "wget -q -Y off http://localhost:3000/api/health -O /dev/null > /dev/null 2>&1"
      interval: 25s
      timeout: 3s
      start_period: 30s
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAINNAME}`)
        - traefik.http.routers.grafana.entrypoints=https
        - traefik.http.routers.grafana.middlewares=default-headers@file
        - traefik.http.routers.grafana.tls.domains[0].main=${DOMAINNAME}
        - traefik.http.routers.grafana.tls.domains[0].sans=*.${DOMAINNAME}
        - traefik.http.routers.grafana.tls.certresolver=ovh
        - traefik.http.services.grafana.loadbalancer.server.port=3000

  ssh-log-to-influx:
    image: acouvreur/ssh-log-to-influx:latest
    environment:
      - INFLUX_URL=influxdb
      - INFLUX_DB=telegraf
    networks:
      - traefik
    ports:
      - 7070:7070/tcp
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      failure_action: rollback

configs:
  influxdb.conf:
    file: ./influxdb/influxdb.conf
  telegraf.conf:
    file: ./telegraf/telegraf.conf
  grafana.ini:
    file: ./grafana/config.ini

volumes:
  influxdb_data:
    driver: nfs
    driver_opts:
      share: ${MASTER_IP}${PIDRIVE}/monitoring/influxdb
  grafana_data:
    driver: nfs
    driver_opts:
      share: ${MASTER_IP}${PIDRIVE}/monitoring/grafana

networks:
  traefik:
    external: true
    name: traefik
